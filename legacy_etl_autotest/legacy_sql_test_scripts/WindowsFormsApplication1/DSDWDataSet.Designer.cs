//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace WindowsFormsApplication1 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DSDWDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DSDWDataSet : global::System.Data.DataSet {
        
        private AbstractDayCareFactDataTable tableAbstractDayCareFact;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DSDWDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DSDWDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["AbstractDayCareFact"] != null)) {
                    base.Tables.Add(new AbstractDayCareFactDataTable(ds.Tables["AbstractDayCareFact"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AbstractDayCareFactDataTable AbstractDayCareFact {
            get {
                return this.tableAbstractDayCareFact;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DSDWDataSet cln = ((DSDWDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["AbstractDayCareFact"] != null)) {
                    base.Tables.Add(new AbstractDayCareFactDataTable(ds.Tables["AbstractDayCareFact"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableAbstractDayCareFact = ((AbstractDayCareFactDataTable)(base.Tables["AbstractDayCareFact"]));
            if ((initTable == true)) {
                if ((this.tableAbstractDayCareFact != null)) {
                    this.tableAbstractDayCareFact.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DSDWDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DSDWDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableAbstractDayCareFact = new AbstractDayCareFactDataTable();
            base.Tables.Add(this.tableAbstractDayCareFact);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAbstractDayCareFact() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DSDWDataSet ds = new DSDWDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AbstractDayCareFactRowChangeEventHandler(object sender, AbstractDayCareFactRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AbstractDayCareFactDataTable : global::System.Data.TypedTableBase<AbstractDayCareFactRow> {
            
            private global::System.Data.DataColumn columnETLAuditId;
            
            private global::System.Data.DataColumn columnBatchYear;
            
            private global::System.Data.DataColumn columnBatchPeriod;
            
            private global::System.Data.DataColumn columnAcctNum;
            
            private global::System.Data.DataColumn columnChartNum;
            
            private global::System.Data.DataColumn columnRIW;
            
            private global::System.Data.DataColumn columnDPG_RIW;
            
            private global::System.Data.DataColumn columnIsDeathInOR;
            
            private global::System.Data.DataColumn columnLOSID;
            
            private global::System.Data.DataColumn columnLOS;
            
            private global::System.Data.DataColumn columnLOSHours;
            
            private global::System.Data.DataColumn columnDPGID;
            
            private global::System.Data.DataColumn columnAdmissionDateID;
            
            private global::System.Data.DataColumn columnAdmissionCategoryID;
            
            private global::System.Data.DataColumn columnAdmissionNurseUnitID;
            
            private global::System.Data.DataColumn columnAdmissionTimeID;
            
            private global::System.Data.DataColumn columnAdmitDrServID;
            
            private global::System.Data.DataColumn columnAnesthesiaID;
            
            private global::System.Data.DataColumn columnDischargeDateID;
            
            private global::System.Data.DataColumn columnDischargeDispositionID;
            
            private global::System.Data.DataColumn columnDischargeTimeID;
            
            private global::System.Data.DataColumn columnDoctorID;
            
            private global::System.Data.DataColumn columnEntryCodeID;
            
            private global::System.Data.DataColumn columnGenderID;
            
            private global::System.Data.DataColumn columnProviderID;
            
            private global::System.Data.DataColumn columnProviderFromID;
            
            private global::System.Data.DataColumn columnProviderToID;
            
            private global::System.Data.DataColumn columnMainPtServID;
            
            private global::System.Data.DataColumn columnMainPtSubServID;
            
            private global::System.Data.DataColumn columnMCCID;
            
            private global::System.Data.DataColumn columnNurseUnitID;
            
            private global::System.Data.DataColumn columnPatientID;
            
            private global::System.Data.DataColumn columnEDLeftDateId;
            
            private global::System.Data.DataColumn columnEDLeftTimeId;
            
            private global::System.Data.DataColumn columnEDWaitDaysId;
            
            private global::System.Data.DataColumn columnEDWaitMinutesId;
            
            private global::System.Data.DataColumn columnIsEDUnknownDischargeDate;
            
            private global::System.Data.DataColumn columnPrivateClinicProviderId;
            
            private global::System.Data.DataColumn columnMRCareProgramCode;
            
            private global::System.Data.DataColumn columnMRCareTeamCode;
            
            private global::System.Data.DataColumn columnMACID;
            
            private global::System.Data.DataColumn columnCACSID;
            
            private global::System.Data.DataColumn columnAmbltryCostWeight;
            
            private global::System.Data.DataColumn columnVendorAgeCat;
            
            private global::System.Data.DataColumn columnVendorAnestCat;
            
            private global::System.Data.DataColumn columnVendMITTotalCount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AbstractDayCareFactDataTable() {
                this.TableName = "AbstractDayCareFact";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AbstractDayCareFactDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AbstractDayCareFactDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ETLAuditIdColumn {
                get {
                    return this.columnETLAuditId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BatchYearColumn {
                get {
                    return this.columnBatchYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BatchPeriodColumn {
                get {
                    return this.columnBatchPeriod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AcctNumColumn {
                get {
                    return this.columnAcctNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChartNumColumn {
                get {
                    return this.columnChartNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RIWColumn {
                get {
                    return this.columnRIW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DPG_RIWColumn {
                get {
                    return this.columnDPG_RIW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsDeathInORColumn {
                get {
                    return this.columnIsDeathInOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOSIDColumn {
                get {
                    return this.columnLOSID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOSColumn {
                get {
                    return this.columnLOS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOSHoursColumn {
                get {
                    return this.columnLOSHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DPGIDColumn {
                get {
                    return this.columnDPGID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdmissionDateIDColumn {
                get {
                    return this.columnAdmissionDateID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdmissionCategoryIDColumn {
                get {
                    return this.columnAdmissionCategoryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdmissionNurseUnitIDColumn {
                get {
                    return this.columnAdmissionNurseUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdmissionTimeIDColumn {
                get {
                    return this.columnAdmissionTimeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdmitDrServIDColumn {
                get {
                    return this.columnAdmitDrServID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnesthesiaIDColumn {
                get {
                    return this.columnAnesthesiaID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DischargeDateIDColumn {
                get {
                    return this.columnDischargeDateID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DischargeDispositionIDColumn {
                get {
                    return this.columnDischargeDispositionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DischargeTimeIDColumn {
                get {
                    return this.columnDischargeTimeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DoctorIDColumn {
                get {
                    return this.columnDoctorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EntryCodeIDColumn {
                get {
                    return this.columnEntryCodeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenderIDColumn {
                get {
                    return this.columnGenderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProviderIDColumn {
                get {
                    return this.columnProviderID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProviderFromIDColumn {
                get {
                    return this.columnProviderFromID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProviderToIDColumn {
                get {
                    return this.columnProviderToID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MainPtServIDColumn {
                get {
                    return this.columnMainPtServID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MainPtSubServIDColumn {
                get {
                    return this.columnMainPtSubServID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MCCIDColumn {
                get {
                    return this.columnMCCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NurseUnitIDColumn {
                get {
                    return this.columnNurseUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientIDColumn {
                get {
                    return this.columnPatientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EDLeftDateIdColumn {
                get {
                    return this.columnEDLeftDateId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EDLeftTimeIdColumn {
                get {
                    return this.columnEDLeftTimeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EDWaitDaysIdColumn {
                get {
                    return this.columnEDWaitDaysId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EDWaitMinutesIdColumn {
                get {
                    return this.columnEDWaitMinutesId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsEDUnknownDischargeDateColumn {
                get {
                    return this.columnIsEDUnknownDischargeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrivateClinicProviderIdColumn {
                get {
                    return this.columnPrivateClinicProviderId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MRCareProgramCodeColumn {
                get {
                    return this.columnMRCareProgramCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MRCareTeamCodeColumn {
                get {
                    return this.columnMRCareTeamCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MACIDColumn {
                get {
                    return this.columnMACID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CACSIDColumn {
                get {
                    return this.columnCACSID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmbltryCostWeightColumn {
                get {
                    return this.columnAmbltryCostWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VendorAgeCatColumn {
                get {
                    return this.columnVendorAgeCat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VendorAnestCatColumn {
                get {
                    return this.columnVendorAnestCat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VendMITTotalCountColumn {
                get {
                    return this.columnVendMITTotalCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AbstractDayCareFactRow this[int index] {
                get {
                    return ((AbstractDayCareFactRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AbstractDayCareFactRowChangeEventHandler AbstractDayCareFactRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AbstractDayCareFactRowChangeEventHandler AbstractDayCareFactRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AbstractDayCareFactRowChangeEventHandler AbstractDayCareFactRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AbstractDayCareFactRowChangeEventHandler AbstractDayCareFactRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAbstractDayCareFactRow(AbstractDayCareFactRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AbstractDayCareFactRow AddAbstractDayCareFactRow(
                        long ETLAuditId, 
                        short BatchYear, 
                        short BatchPeriod, 
                        string AcctNum, 
                        string ChartNum, 
                        double RIW, 
                        double DPG_RIW, 
                        bool IsDeathInOR, 
                        int LOSID, 
                        int LOS, 
                        int LOSHours, 
                        int DPGID, 
                        int AdmissionDateID, 
                        int AdmissionCategoryID, 
                        int AdmissionNurseUnitID, 
                        int AdmissionTimeID, 
                        int AdmitDrServID, 
                        int AnesthesiaID, 
                        int DischargeDateID, 
                        int DischargeDispositionID, 
                        int DischargeTimeID, 
                        int DoctorID, 
                        short EntryCodeID, 
                        byte GenderID, 
                        int ProviderID, 
                        int ProviderFromID, 
                        int ProviderToID, 
                        int MainPtServID, 
                        short MainPtSubServID, 
                        int MCCID, 
                        int NurseUnitID, 
                        int PatientID, 
                        int EDLeftDateId, 
                        int EDLeftTimeId, 
                        int EDWaitDaysId, 
                        int EDWaitMinutesId, 
                        bool IsEDUnknownDischargeDate, 
                        int PrivateClinicProviderId, 
                        string MRCareProgramCode, 
                        string MRCareTeamCode, 
                        int MACID, 
                        int CACSID, 
                        decimal AmbltryCostWeight, 
                        string VendorAgeCat, 
                        int VendorAnestCat, 
                        int VendMITTotalCount) {
                AbstractDayCareFactRow rowAbstractDayCareFactRow = ((AbstractDayCareFactRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ETLAuditId,
                        BatchYear,
                        BatchPeriod,
                        AcctNum,
                        ChartNum,
                        RIW,
                        DPG_RIW,
                        IsDeathInOR,
                        LOSID,
                        LOS,
                        LOSHours,
                        DPGID,
                        AdmissionDateID,
                        AdmissionCategoryID,
                        AdmissionNurseUnitID,
                        AdmissionTimeID,
                        AdmitDrServID,
                        AnesthesiaID,
                        DischargeDateID,
                        DischargeDispositionID,
                        DischargeTimeID,
                        DoctorID,
                        EntryCodeID,
                        GenderID,
                        ProviderID,
                        ProviderFromID,
                        ProviderToID,
                        MainPtServID,
                        MainPtSubServID,
                        MCCID,
                        NurseUnitID,
                        PatientID,
                        EDLeftDateId,
                        EDLeftTimeId,
                        EDWaitDaysId,
                        EDWaitMinutesId,
                        IsEDUnknownDischargeDate,
                        PrivateClinicProviderId,
                        MRCareProgramCode,
                        MRCareTeamCode,
                        MACID,
                        CACSID,
                        AmbltryCostWeight,
                        VendorAgeCat,
                        VendorAnestCat,
                        VendMITTotalCount};
                rowAbstractDayCareFactRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAbstractDayCareFactRow);
                return rowAbstractDayCareFactRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AbstractDayCareFactDataTable cln = ((AbstractDayCareFactDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AbstractDayCareFactDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnETLAuditId = base.Columns["ETLAuditId"];
                this.columnBatchYear = base.Columns["BatchYear"];
                this.columnBatchPeriod = base.Columns["BatchPeriod"];
                this.columnAcctNum = base.Columns["AcctNum"];
                this.columnChartNum = base.Columns["ChartNum"];
                this.columnRIW = base.Columns["RIW"];
                this.columnDPG_RIW = base.Columns["DPG_RIW"];
                this.columnIsDeathInOR = base.Columns["IsDeathInOR"];
                this.columnLOSID = base.Columns["LOSID"];
                this.columnLOS = base.Columns["LOS"];
                this.columnLOSHours = base.Columns["LOSHours"];
                this.columnDPGID = base.Columns["DPGID"];
                this.columnAdmissionDateID = base.Columns["AdmissionDateID"];
                this.columnAdmissionCategoryID = base.Columns["AdmissionCategoryID"];
                this.columnAdmissionNurseUnitID = base.Columns["AdmissionNurseUnitID"];
                this.columnAdmissionTimeID = base.Columns["AdmissionTimeID"];
                this.columnAdmitDrServID = base.Columns["AdmitDrServID"];
                this.columnAnesthesiaID = base.Columns["AnesthesiaID"];
                this.columnDischargeDateID = base.Columns["DischargeDateID"];
                this.columnDischargeDispositionID = base.Columns["DischargeDispositionID"];
                this.columnDischargeTimeID = base.Columns["DischargeTimeID"];
                this.columnDoctorID = base.Columns["DoctorID"];
                this.columnEntryCodeID = base.Columns["EntryCodeID"];
                this.columnGenderID = base.Columns["GenderID"];
                this.columnProviderID = base.Columns["ProviderID"];
                this.columnProviderFromID = base.Columns["ProviderFromID"];
                this.columnProviderToID = base.Columns["ProviderToID"];
                this.columnMainPtServID = base.Columns["MainPtServID"];
                this.columnMainPtSubServID = base.Columns["MainPtSubServID"];
                this.columnMCCID = base.Columns["MCCID"];
                this.columnNurseUnitID = base.Columns["NurseUnitID"];
                this.columnPatientID = base.Columns["PatientID"];
                this.columnEDLeftDateId = base.Columns["EDLeftDateId"];
                this.columnEDLeftTimeId = base.Columns["EDLeftTimeId"];
                this.columnEDWaitDaysId = base.Columns["EDWaitDaysId"];
                this.columnEDWaitMinutesId = base.Columns["EDWaitMinutesId"];
                this.columnIsEDUnknownDischargeDate = base.Columns["IsEDUnknownDischargeDate"];
                this.columnPrivateClinicProviderId = base.Columns["PrivateClinicProviderId"];
                this.columnMRCareProgramCode = base.Columns["MRCareProgramCode"];
                this.columnMRCareTeamCode = base.Columns["MRCareTeamCode"];
                this.columnMACID = base.Columns["MACID"];
                this.columnCACSID = base.Columns["CACSID"];
                this.columnAmbltryCostWeight = base.Columns["AmbltryCostWeight"];
                this.columnVendorAgeCat = base.Columns["VendorAgeCat"];
                this.columnVendorAnestCat = base.Columns["VendorAnestCat"];
                this.columnVendMITTotalCount = base.Columns["VendMITTotalCount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnETLAuditId = new global::System.Data.DataColumn("ETLAuditId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETLAuditId);
                this.columnBatchYear = new global::System.Data.DataColumn("BatchYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchYear);
                this.columnBatchPeriod = new global::System.Data.DataColumn("BatchPeriod", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchPeriod);
                this.columnAcctNum = new global::System.Data.DataColumn("AcctNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcctNum);
                this.columnChartNum = new global::System.Data.DataColumn("ChartNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChartNum);
                this.columnRIW = new global::System.Data.DataColumn("RIW", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRIW);
                this.columnDPG_RIW = new global::System.Data.DataColumn("DPG_RIW", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDPG_RIW);
                this.columnIsDeathInOR = new global::System.Data.DataColumn("IsDeathInOR", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeathInOR);
                this.columnLOSID = new global::System.Data.DataColumn("LOSID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOSID);
                this.columnLOS = new global::System.Data.DataColumn("LOS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOS);
                this.columnLOSHours = new global::System.Data.DataColumn("LOSHours", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOSHours);
                this.columnDPGID = new global::System.Data.DataColumn("DPGID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDPGID);
                this.columnAdmissionDateID = new global::System.Data.DataColumn("AdmissionDateID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmissionDateID);
                this.columnAdmissionCategoryID = new global::System.Data.DataColumn("AdmissionCategoryID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmissionCategoryID);
                this.columnAdmissionNurseUnitID = new global::System.Data.DataColumn("AdmissionNurseUnitID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmissionNurseUnitID);
                this.columnAdmissionTimeID = new global::System.Data.DataColumn("AdmissionTimeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmissionTimeID);
                this.columnAdmitDrServID = new global::System.Data.DataColumn("AdmitDrServID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmitDrServID);
                this.columnAnesthesiaID = new global::System.Data.DataColumn("AnesthesiaID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnesthesiaID);
                this.columnDischargeDateID = new global::System.Data.DataColumn("DischargeDateID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDischargeDateID);
                this.columnDischargeDispositionID = new global::System.Data.DataColumn("DischargeDispositionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDischargeDispositionID);
                this.columnDischargeTimeID = new global::System.Data.DataColumn("DischargeTimeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDischargeTimeID);
                this.columnDoctorID = new global::System.Data.DataColumn("DoctorID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoctorID);
                this.columnEntryCodeID = new global::System.Data.DataColumn("EntryCodeID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntryCodeID);
                this.columnGenderID = new global::System.Data.DataColumn("GenderID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenderID);
                this.columnProviderID = new global::System.Data.DataColumn("ProviderID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProviderID);
                this.columnProviderFromID = new global::System.Data.DataColumn("ProviderFromID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProviderFromID);
                this.columnProviderToID = new global::System.Data.DataColumn("ProviderToID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProviderToID);
                this.columnMainPtServID = new global::System.Data.DataColumn("MainPtServID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMainPtServID);
                this.columnMainPtSubServID = new global::System.Data.DataColumn("MainPtSubServID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMainPtSubServID);
                this.columnMCCID = new global::System.Data.DataColumn("MCCID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMCCID);
                this.columnNurseUnitID = new global::System.Data.DataColumn("NurseUnitID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNurseUnitID);
                this.columnPatientID = new global::System.Data.DataColumn("PatientID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientID);
                this.columnEDLeftDateId = new global::System.Data.DataColumn("EDLeftDateId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEDLeftDateId);
                this.columnEDLeftTimeId = new global::System.Data.DataColumn("EDLeftTimeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEDLeftTimeId);
                this.columnEDWaitDaysId = new global::System.Data.DataColumn("EDWaitDaysId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEDWaitDaysId);
                this.columnEDWaitMinutesId = new global::System.Data.DataColumn("EDWaitMinutesId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEDWaitMinutesId);
                this.columnIsEDUnknownDischargeDate = new global::System.Data.DataColumn("IsEDUnknownDischargeDate", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsEDUnknownDischargeDate);
                this.columnPrivateClinicProviderId = new global::System.Data.DataColumn("PrivateClinicProviderId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrivateClinicProviderId);
                this.columnMRCareProgramCode = new global::System.Data.DataColumn("MRCareProgramCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMRCareProgramCode);
                this.columnMRCareTeamCode = new global::System.Data.DataColumn("MRCareTeamCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMRCareTeamCode);
                this.columnMACID = new global::System.Data.DataColumn("MACID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMACID);
                this.columnCACSID = new global::System.Data.DataColumn("CACSID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCACSID);
                this.columnAmbltryCostWeight = new global::System.Data.DataColumn("AmbltryCostWeight", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmbltryCostWeight);
                this.columnVendorAgeCat = new global::System.Data.DataColumn("VendorAgeCat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorAgeCat);
                this.columnVendorAnestCat = new global::System.Data.DataColumn("VendorAnestCat", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorAnestCat);
                this.columnVendMITTotalCount = new global::System.Data.DataColumn("VendMITTotalCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendMITTotalCount);
                this.columnETLAuditId.AllowDBNull = false;
                this.columnBatchYear.AllowDBNull = false;
                this.columnBatchPeriod.AllowDBNull = false;
                this.columnAcctNum.MaxLength = 50;
                this.columnChartNum.MaxLength = 50;
                this.columnMRCareProgramCode.MaxLength = 255;
                this.columnMRCareTeamCode.MaxLength = 255;
                this.columnVendorAgeCat.MaxLength = 5;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AbstractDayCareFactRow NewAbstractDayCareFactRow() {
                return ((AbstractDayCareFactRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AbstractDayCareFactRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AbstractDayCareFactRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AbstractDayCareFactRowChanged != null)) {
                    this.AbstractDayCareFactRowChanged(this, new AbstractDayCareFactRowChangeEvent(((AbstractDayCareFactRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AbstractDayCareFactRowChanging != null)) {
                    this.AbstractDayCareFactRowChanging(this, new AbstractDayCareFactRowChangeEvent(((AbstractDayCareFactRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AbstractDayCareFactRowDeleted != null)) {
                    this.AbstractDayCareFactRowDeleted(this, new AbstractDayCareFactRowChangeEvent(((AbstractDayCareFactRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AbstractDayCareFactRowDeleting != null)) {
                    this.AbstractDayCareFactRowDeleting(this, new AbstractDayCareFactRowChangeEvent(((AbstractDayCareFactRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAbstractDayCareFactRow(AbstractDayCareFactRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSDWDataSet ds = new DSDWDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AbstractDayCareFactDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AbstractDayCareFactRow : global::System.Data.DataRow {
            
            private AbstractDayCareFactDataTable tableAbstractDayCareFact;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AbstractDayCareFactRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAbstractDayCareFact = ((AbstractDayCareFactDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ETLAuditId {
                get {
                    return ((long)(this[this.tableAbstractDayCareFact.ETLAuditIdColumn]));
                }
                set {
                    this[this.tableAbstractDayCareFact.ETLAuditIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short BatchYear {
                get {
                    return ((short)(this[this.tableAbstractDayCareFact.BatchYearColumn]));
                }
                set {
                    this[this.tableAbstractDayCareFact.BatchYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short BatchPeriod {
                get {
                    return ((short)(this[this.tableAbstractDayCareFact.BatchPeriodColumn]));
                }
                set {
                    this[this.tableAbstractDayCareFact.BatchPeriodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AcctNum {
                get {
                    try {
                        return ((string)(this[this.tableAbstractDayCareFact.AcctNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AcctNum\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.AcctNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChartNum {
                get {
                    try {
                        return ((string)(this[this.tableAbstractDayCareFact.ChartNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChartNum\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.ChartNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double RIW {
                get {
                    try {
                        return ((double)(this[this.tableAbstractDayCareFact.RIWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RIW\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.RIWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DPG_RIW {
                get {
                    try {
                        return ((double)(this[this.tableAbstractDayCareFact.DPG_RIWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DPG_RIW\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.DPG_RIWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeathInOR {
                get {
                    try {
                        return ((bool)(this[this.tableAbstractDayCareFact.IsDeathInORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeathInOR\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.IsDeathInORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LOSID {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.LOSIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOSID\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.LOSIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LOS {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.LOSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOS\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.LOSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LOSHours {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.LOSHoursColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOSHours\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.LOSHoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DPGID {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.DPGIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DPGID\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.DPGIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AdmissionDateID {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.AdmissionDateIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdmissionDateID\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.AdmissionDateIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AdmissionCategoryID {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.AdmissionCategoryIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdmissionCategoryID\' in table \'AbstractDayCareFact\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.AdmissionCategoryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AdmissionNurseUnitID {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.AdmissionNurseUnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdmissionNurseUnitID\' in table \'AbstractDayCareFact\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.AdmissionNurseUnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AdmissionTimeID {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.AdmissionTimeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdmissionTimeID\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.AdmissionTimeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AdmitDrServID {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.AdmitDrServIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdmitDrServID\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.AdmitDrServIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AnesthesiaID {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.AnesthesiaIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnesthesiaID\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.AnesthesiaIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DischargeDateID {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.DischargeDateIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DischargeDateID\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.DischargeDateIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DischargeDispositionID {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.DischargeDispositionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DischargeDispositionID\' in table \'AbstractDayCareFact\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.DischargeDispositionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DischargeTimeID {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.DischargeTimeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DischargeTimeID\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.DischargeTimeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DoctorID {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.DoctorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DoctorID\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.DoctorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short EntryCodeID {
                get {
                    try {
                        return ((short)(this[this.tableAbstractDayCareFact.EntryCodeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EntryCodeID\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.EntryCodeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte GenderID {
                get {
                    try {
                        return ((byte)(this[this.tableAbstractDayCareFact.GenderIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GenderID\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.GenderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProviderID {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.ProviderIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProviderID\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.ProviderIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProviderFromID {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.ProviderFromIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProviderFromID\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.ProviderFromIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProviderToID {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.ProviderToIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProviderToID\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.ProviderToIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MainPtServID {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.MainPtServIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MainPtServID\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.MainPtServIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short MainPtSubServID {
                get {
                    try {
                        return ((short)(this[this.tableAbstractDayCareFact.MainPtSubServIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MainPtSubServID\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.MainPtSubServIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MCCID {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.MCCIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MCCID\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.MCCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NurseUnitID {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.NurseUnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NurseUnitID\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.NurseUnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PatientID {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.PatientIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientID\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.PatientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EDLeftDateId {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.EDLeftDateIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EDLeftDateId\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.EDLeftDateIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EDLeftTimeId {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.EDLeftTimeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EDLeftTimeId\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.EDLeftTimeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EDWaitDaysId {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.EDWaitDaysIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EDWaitDaysId\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.EDWaitDaysIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EDWaitMinutesId {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.EDWaitMinutesIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EDWaitMinutesId\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.EDWaitMinutesIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEDUnknownDischargeDate {
                get {
                    try {
                        return ((bool)(this[this.tableAbstractDayCareFact.IsEDUnknownDischargeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsEDUnknownDischargeDate\' in table \'AbstractDayCareFact\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.IsEDUnknownDischargeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PrivateClinicProviderId {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.PrivateClinicProviderIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrivateClinicProviderId\' in table \'AbstractDayCareFact\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.PrivateClinicProviderIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MRCareProgramCode {
                get {
                    try {
                        return ((string)(this[this.tableAbstractDayCareFact.MRCareProgramCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MRCareProgramCode\' in table \'AbstractDayCareFact\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.MRCareProgramCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MRCareTeamCode {
                get {
                    try {
                        return ((string)(this[this.tableAbstractDayCareFact.MRCareTeamCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MRCareTeamCode\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.MRCareTeamCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MACID {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.MACIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MACID\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.MACIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CACSID {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.CACSIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CACSID\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.CACSIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AmbltryCostWeight {
                get {
                    try {
                        return ((decimal)(this[this.tableAbstractDayCareFact.AmbltryCostWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmbltryCostWeight\' in table \'AbstractDayCareFact\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.AmbltryCostWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VendorAgeCat {
                get {
                    try {
                        return ((string)(this[this.tableAbstractDayCareFact.VendorAgeCatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorAgeCat\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.VendorAgeCatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int VendorAnestCat {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.VendorAnestCatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorAnestCat\' in table \'AbstractDayCareFact\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.VendorAnestCatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int VendMITTotalCount {
                get {
                    try {
                        return ((int)(this[this.tableAbstractDayCareFact.VendMITTotalCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendMITTotalCount\' in table \'AbstractDayCareFact\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableAbstractDayCareFact.VendMITTotalCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAcctNumNull() {
                return this.IsNull(this.tableAbstractDayCareFact.AcctNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAcctNumNull() {
                this[this.tableAbstractDayCareFact.AcctNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChartNumNull() {
                return this.IsNull(this.tableAbstractDayCareFact.ChartNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChartNumNull() {
                this[this.tableAbstractDayCareFact.ChartNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRIWNull() {
                return this.IsNull(this.tableAbstractDayCareFact.RIWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRIWNull() {
                this[this.tableAbstractDayCareFact.RIWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDPG_RIWNull() {
                return this.IsNull(this.tableAbstractDayCareFact.DPG_RIWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDPG_RIWNull() {
                this[this.tableAbstractDayCareFact.DPG_RIWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsDeathInORNull() {
                return this.IsNull(this.tableAbstractDayCareFact.IsDeathInORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsDeathInORNull() {
                this[this.tableAbstractDayCareFact.IsDeathInORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLOSIDNull() {
                return this.IsNull(this.tableAbstractDayCareFact.LOSIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLOSIDNull() {
                this[this.tableAbstractDayCareFact.LOSIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLOSNull() {
                return this.IsNull(this.tableAbstractDayCareFact.LOSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLOSNull() {
                this[this.tableAbstractDayCareFact.LOSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLOSHoursNull() {
                return this.IsNull(this.tableAbstractDayCareFact.LOSHoursColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLOSHoursNull() {
                this[this.tableAbstractDayCareFact.LOSHoursColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDPGIDNull() {
                return this.IsNull(this.tableAbstractDayCareFact.DPGIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDPGIDNull() {
                this[this.tableAbstractDayCareFact.DPGIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdmissionDateIDNull() {
                return this.IsNull(this.tableAbstractDayCareFact.AdmissionDateIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdmissionDateIDNull() {
                this[this.tableAbstractDayCareFact.AdmissionDateIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdmissionCategoryIDNull() {
                return this.IsNull(this.tableAbstractDayCareFact.AdmissionCategoryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdmissionCategoryIDNull() {
                this[this.tableAbstractDayCareFact.AdmissionCategoryIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdmissionNurseUnitIDNull() {
                return this.IsNull(this.tableAbstractDayCareFact.AdmissionNurseUnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdmissionNurseUnitIDNull() {
                this[this.tableAbstractDayCareFact.AdmissionNurseUnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdmissionTimeIDNull() {
                return this.IsNull(this.tableAbstractDayCareFact.AdmissionTimeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdmissionTimeIDNull() {
                this[this.tableAbstractDayCareFact.AdmissionTimeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdmitDrServIDNull() {
                return this.IsNull(this.tableAbstractDayCareFact.AdmitDrServIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdmitDrServIDNull() {
                this[this.tableAbstractDayCareFact.AdmitDrServIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnesthesiaIDNull() {
                return this.IsNull(this.tableAbstractDayCareFact.AnesthesiaIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnesthesiaIDNull() {
                this[this.tableAbstractDayCareFact.AnesthesiaIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDischargeDateIDNull() {
                return this.IsNull(this.tableAbstractDayCareFact.DischargeDateIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDischargeDateIDNull() {
                this[this.tableAbstractDayCareFact.DischargeDateIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDischargeDispositionIDNull() {
                return this.IsNull(this.tableAbstractDayCareFact.DischargeDispositionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDischargeDispositionIDNull() {
                this[this.tableAbstractDayCareFact.DischargeDispositionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDischargeTimeIDNull() {
                return this.IsNull(this.tableAbstractDayCareFact.DischargeTimeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDischargeTimeIDNull() {
                this[this.tableAbstractDayCareFact.DischargeTimeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDoctorIDNull() {
                return this.IsNull(this.tableAbstractDayCareFact.DoctorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDoctorIDNull() {
                this[this.tableAbstractDayCareFact.DoctorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEntryCodeIDNull() {
                return this.IsNull(this.tableAbstractDayCareFact.EntryCodeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEntryCodeIDNull() {
                this[this.tableAbstractDayCareFact.EntryCodeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGenderIDNull() {
                return this.IsNull(this.tableAbstractDayCareFact.GenderIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGenderIDNull() {
                this[this.tableAbstractDayCareFact.GenderIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProviderIDNull() {
                return this.IsNull(this.tableAbstractDayCareFact.ProviderIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProviderIDNull() {
                this[this.tableAbstractDayCareFact.ProviderIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProviderFromIDNull() {
                return this.IsNull(this.tableAbstractDayCareFact.ProviderFromIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProviderFromIDNull() {
                this[this.tableAbstractDayCareFact.ProviderFromIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProviderToIDNull() {
                return this.IsNull(this.tableAbstractDayCareFact.ProviderToIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProviderToIDNull() {
                this[this.tableAbstractDayCareFact.ProviderToIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMainPtServIDNull() {
                return this.IsNull(this.tableAbstractDayCareFact.MainPtServIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMainPtServIDNull() {
                this[this.tableAbstractDayCareFact.MainPtServIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMainPtSubServIDNull() {
                return this.IsNull(this.tableAbstractDayCareFact.MainPtSubServIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMainPtSubServIDNull() {
                this[this.tableAbstractDayCareFact.MainPtSubServIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMCCIDNull() {
                return this.IsNull(this.tableAbstractDayCareFact.MCCIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMCCIDNull() {
                this[this.tableAbstractDayCareFact.MCCIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNurseUnitIDNull() {
                return this.IsNull(this.tableAbstractDayCareFact.NurseUnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNurseUnitIDNull() {
                this[this.tableAbstractDayCareFact.NurseUnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientIDNull() {
                return this.IsNull(this.tableAbstractDayCareFact.PatientIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientIDNull() {
                this[this.tableAbstractDayCareFact.PatientIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEDLeftDateIdNull() {
                return this.IsNull(this.tableAbstractDayCareFact.EDLeftDateIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEDLeftDateIdNull() {
                this[this.tableAbstractDayCareFact.EDLeftDateIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEDLeftTimeIdNull() {
                return this.IsNull(this.tableAbstractDayCareFact.EDLeftTimeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEDLeftTimeIdNull() {
                this[this.tableAbstractDayCareFact.EDLeftTimeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEDWaitDaysIdNull() {
                return this.IsNull(this.tableAbstractDayCareFact.EDWaitDaysIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEDWaitDaysIdNull() {
                this[this.tableAbstractDayCareFact.EDWaitDaysIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEDWaitMinutesIdNull() {
                return this.IsNull(this.tableAbstractDayCareFact.EDWaitMinutesIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEDWaitMinutesIdNull() {
                this[this.tableAbstractDayCareFact.EDWaitMinutesIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsEDUnknownDischargeDateNull() {
                return this.IsNull(this.tableAbstractDayCareFact.IsEDUnknownDischargeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsEDUnknownDischargeDateNull() {
                this[this.tableAbstractDayCareFact.IsEDUnknownDischargeDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrivateClinicProviderIdNull() {
                return this.IsNull(this.tableAbstractDayCareFact.PrivateClinicProviderIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrivateClinicProviderIdNull() {
                this[this.tableAbstractDayCareFact.PrivateClinicProviderIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMRCareProgramCodeNull() {
                return this.IsNull(this.tableAbstractDayCareFact.MRCareProgramCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMRCareProgramCodeNull() {
                this[this.tableAbstractDayCareFact.MRCareProgramCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMRCareTeamCodeNull() {
                return this.IsNull(this.tableAbstractDayCareFact.MRCareTeamCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMRCareTeamCodeNull() {
                this[this.tableAbstractDayCareFact.MRCareTeamCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMACIDNull() {
                return this.IsNull(this.tableAbstractDayCareFact.MACIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMACIDNull() {
                this[this.tableAbstractDayCareFact.MACIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCACSIDNull() {
                return this.IsNull(this.tableAbstractDayCareFact.CACSIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCACSIDNull() {
                this[this.tableAbstractDayCareFact.CACSIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAmbltryCostWeightNull() {
                return this.IsNull(this.tableAbstractDayCareFact.AmbltryCostWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAmbltryCostWeightNull() {
                this[this.tableAbstractDayCareFact.AmbltryCostWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVendorAgeCatNull() {
                return this.IsNull(this.tableAbstractDayCareFact.VendorAgeCatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVendorAgeCatNull() {
                this[this.tableAbstractDayCareFact.VendorAgeCatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVendorAnestCatNull() {
                return this.IsNull(this.tableAbstractDayCareFact.VendorAnestCatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVendorAnestCatNull() {
                this[this.tableAbstractDayCareFact.VendorAnestCatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVendMITTotalCountNull() {
                return this.IsNull(this.tableAbstractDayCareFact.VendMITTotalCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVendMITTotalCountNull() {
                this[this.tableAbstractDayCareFact.VendMITTotalCountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AbstractDayCareFactRowChangeEvent : global::System.EventArgs {
            
            private AbstractDayCareFactRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AbstractDayCareFactRowChangeEvent(AbstractDayCareFactRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AbstractDayCareFactRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace WindowsFormsApplication1.DSDWDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AbstractDayCareFactTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AbstractDayCareFactTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AbstractDayCareFact";
            tableMapping.ColumnMappings.Add("ETLAuditId", "ETLAuditId");
            tableMapping.ColumnMappings.Add("BatchYear", "BatchYear");
            tableMapping.ColumnMappings.Add("BatchPeriod", "BatchPeriod");
            tableMapping.ColumnMappings.Add("AcctNum", "AcctNum");
            tableMapping.ColumnMappings.Add("ChartNum", "ChartNum");
            tableMapping.ColumnMappings.Add("RIW", "RIW");
            tableMapping.ColumnMappings.Add("DPG_RIW", "DPG_RIW");
            tableMapping.ColumnMappings.Add("IsDeathInOR", "IsDeathInOR");
            tableMapping.ColumnMappings.Add("LOSID", "LOSID");
            tableMapping.ColumnMappings.Add("LOS", "LOS");
            tableMapping.ColumnMappings.Add("LOSHours", "LOSHours");
            tableMapping.ColumnMappings.Add("DPGID", "DPGID");
            tableMapping.ColumnMappings.Add("AdmissionDateID", "AdmissionDateID");
            tableMapping.ColumnMappings.Add("AdmissionCategoryID", "AdmissionCategoryID");
            tableMapping.ColumnMappings.Add("AdmissionNurseUnitID", "AdmissionNurseUnitID");
            tableMapping.ColumnMappings.Add("AdmissionTimeID", "AdmissionTimeID");
            tableMapping.ColumnMappings.Add("AdmitDrServID", "AdmitDrServID");
            tableMapping.ColumnMappings.Add("AnesthesiaID", "AnesthesiaID");
            tableMapping.ColumnMappings.Add("DischargeDateID", "DischargeDateID");
            tableMapping.ColumnMappings.Add("DischargeDispositionID", "DischargeDispositionID");
            tableMapping.ColumnMappings.Add("DischargeTimeID", "DischargeTimeID");
            tableMapping.ColumnMappings.Add("DoctorID", "DoctorID");
            tableMapping.ColumnMappings.Add("EntryCodeID", "EntryCodeID");
            tableMapping.ColumnMappings.Add("GenderID", "GenderID");
            tableMapping.ColumnMappings.Add("ProviderID", "ProviderID");
            tableMapping.ColumnMappings.Add("ProviderFromID", "ProviderFromID");
            tableMapping.ColumnMappings.Add("ProviderToID", "ProviderToID");
            tableMapping.ColumnMappings.Add("MainPtServID", "MainPtServID");
            tableMapping.ColumnMappings.Add("MainPtSubServID", "MainPtSubServID");
            tableMapping.ColumnMappings.Add("MCCID", "MCCID");
            tableMapping.ColumnMappings.Add("NurseUnitID", "NurseUnitID");
            tableMapping.ColumnMappings.Add("PatientID", "PatientID");
            tableMapping.ColumnMappings.Add("EDLeftDateId", "EDLeftDateId");
            tableMapping.ColumnMappings.Add("EDLeftTimeId", "EDLeftTimeId");
            tableMapping.ColumnMappings.Add("EDWaitDaysId", "EDWaitDaysId");
            tableMapping.ColumnMappings.Add("EDWaitMinutesId", "EDWaitMinutesId");
            tableMapping.ColumnMappings.Add("IsEDUnknownDischargeDate", "IsEDUnknownDischargeDate");
            tableMapping.ColumnMappings.Add("PrivateClinicProviderId", "PrivateClinicProviderId");
            tableMapping.ColumnMappings.Add("MRCareProgramCode", "MRCareProgramCode");
            tableMapping.ColumnMappings.Add("MRCareTeamCode", "MRCareTeamCode");
            tableMapping.ColumnMappings.Add("MACID", "MACID");
            tableMapping.ColumnMappings.Add("CACSID", "CACSID");
            tableMapping.ColumnMappings.Add("AmbltryCostWeight", "AmbltryCostWeight");
            tableMapping.ColumnMappings.Add("VendorAgeCat", "VendorAgeCat");
            tableMapping.ColumnMappings.Add("VendorAnestCat", "VendorAnestCat");
            tableMapping.ColumnMappings.Add("VendMITTotalCount", "VendMITTotalCount");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [ADR].[AbstractDayCareFact] ([ETLAuditId], [BatchYear], [BatchPeriod], [AcctNum], [ChartNum], [RIW], [DPG_RIW], [IsDeathInOR], [LOSID], [LOS], [LOSHours], [DPGID], [AdmissionDateID], [AdmissionCategoryID], [AdmissionNurseUnitID], [AdmissionTimeID], [AdmitDrServID], [AnesthesiaID], [DischargeDateID], [DischargeDispositionID], [DischargeTimeID], [DoctorID], [EntryCodeID], [GenderID], [ProviderID], [ProviderFromID], [ProviderToID], [MainPtServID], [MainPtSubServID], [MCCID], [NurseUnitID], [PatientID], [EDLeftDateId], [EDLeftTimeId], [EDWaitDaysId], [EDWaitMinutesId], [IsEDUnknownDischargeDate], [PrivateClinicProviderId], [MRCareProgramCode], [MRCareTeamCode], [MACID], [CACSID], [AmbltryCostWeight], [VendorAgeCat], [VendorAnestCat], [VendMITTotalCount]) VALUES (@ETLAuditId, @BatchYear, @BatchPeriod, @AcctNum, @ChartNum, @RIW, @DPG_RIW, @IsDeathInOR, @LOSID, @LOS, @LOSHours, @DPGID, @AdmissionDateID, @AdmissionCategoryID, @AdmissionNurseUnitID, @AdmissionTimeID, @AdmitDrServID, @AnesthesiaID, @DischargeDateID, @DischargeDispositionID, @DischargeTimeID, @DoctorID, @EntryCodeID, @GenderID, @ProviderID, @ProviderFromID, @ProviderToID, @MainPtServID, @MainPtSubServID, @MCCID, @NurseUnitID, @PatientID, @EDLeftDateId, @EDLeftTimeId, @EDWaitDaysId, @EDWaitMinutesId, @IsEDUnknownDischargeDate, @PrivateClinicProviderId, @MRCareProgramCode, @MRCareTeamCode, @MACID, @CACSID, @AmbltryCostWeight, @VendorAgeCat, @VendorAnestCat, @VendMITTotalCount)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETLAuditId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETLAuditId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchYear", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BatchPeriod", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BatchPeriod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcctNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AcctNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ChartNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ChartNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RIW", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RIW", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DPG_RIW", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPG_RIW", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsDeathInOR", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsDeathInOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOSID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOSID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOSHours", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOSHours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DPGID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DPGID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdmissionDateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdmissionDateID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdmissionCategoryID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdmissionCategoryID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdmissionNurseUnitID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdmissionNurseUnitID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdmissionTimeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdmissionTimeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AdmitDrServID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AdmitDrServID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AnesthesiaID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AnesthesiaID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DischargeDateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DischargeDateID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DischargeDispositionID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DischargeDispositionID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DischargeTimeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DischargeTimeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DoctorID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DoctorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntryCodeID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntryCodeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GenderID", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GenderID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProviderID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProviderID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProviderFromID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProviderFromID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProviderToID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProviderToID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MainPtServID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MainPtServID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MainPtSubServID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MainPtSubServID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MCCID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MCCID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NurseUnitID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NurseUnitID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PatientID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EDLeftDateId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EDLeftDateId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EDLeftTimeId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EDLeftTimeId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EDWaitDaysId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EDWaitDaysId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EDWaitMinutesId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EDWaitMinutesId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsEDUnknownDischargeDate", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsEDUnknownDischargeDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrivateClinicProviderId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrivateClinicProviderId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MRCareProgramCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MRCareProgramCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MRCareTeamCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MRCareTeamCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MACID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MACID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CACSID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CACSID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AmbltryCostWeight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 7, "AmbltryCostWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorAgeCat", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorAgeCat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorAnestCat", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorAnestCat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendMITTotalCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendMITTotalCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication1.Properties.Settings.Default.DSDWConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ETLAuditId, BatchYear, BatchPeriod, AcctNum, ChartNum, RIW, DPG_RIW, IsDeathInOR, LOSID, LOS, LOSHours, DPGID, AdmissionDateID, AdmissionCategoryID, AdmissionNurseUnitID, AdmissionTimeID, AdmitDrServID, AnesthesiaID, DischargeDateID, DischargeDispositionID, DischargeTimeID, DoctorID, EntryCodeID, GenderID, ProviderID, ProviderFromID, ProviderToID, MainPtServID, MainPtSubServID, MCCID, NurseUnitID, PatientID, EDLeftDateId, EDLeftTimeId, EDWaitDaysId, EDWaitMinutesId, IsEDUnknownDischargeDate, PrivateClinicProviderId, MRCareProgramCode, MRCareTeamCode, MACID, CACSID, AmbltryCostWeight, VendorAgeCat, VendorAnestCat, VendMITTotalCount FROM ADR.AbstractDayCareFact";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DSDWDataSet.AbstractDayCareFactDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DSDWDataSet.AbstractDayCareFactDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DSDWDataSet.AbstractDayCareFactDataTable dataTable = new DSDWDataSet.AbstractDayCareFactDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DSDWDataSet.AbstractDayCareFactDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DSDWDataSet dataSet) {
            return this.Adapter.Update(dataSet, "AbstractDayCareFact");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    long ETLAuditId, 
                    short BatchYear, 
                    short BatchPeriod, 
                    string AcctNum, 
                    string ChartNum, 
                    global::System.Nullable<double> RIW, 
                    global::System.Nullable<double> DPG_RIW, 
                    global::System.Nullable<bool> IsDeathInOR, 
                    global::System.Nullable<int> LOSID, 
                    global::System.Nullable<int> LOS, 
                    global::System.Nullable<int> LOSHours, 
                    global::System.Nullable<int> DPGID, 
                    global::System.Nullable<int> AdmissionDateID, 
                    global::System.Nullable<int> AdmissionCategoryID, 
                    global::System.Nullable<int> AdmissionNurseUnitID, 
                    global::System.Nullable<int> AdmissionTimeID, 
                    global::System.Nullable<int> AdmitDrServID, 
                    global::System.Nullable<int> AnesthesiaID, 
                    global::System.Nullable<int> DischargeDateID, 
                    global::System.Nullable<int> DischargeDispositionID, 
                    global::System.Nullable<int> DischargeTimeID, 
                    global::System.Nullable<int> DoctorID, 
                    global::System.Nullable<short> EntryCodeID, 
                    global::System.Nullable<byte> GenderID, 
                    global::System.Nullable<int> ProviderID, 
                    global::System.Nullable<int> ProviderFromID, 
                    global::System.Nullable<int> ProviderToID, 
                    global::System.Nullable<int> MainPtServID, 
                    global::System.Nullable<short> MainPtSubServID, 
                    global::System.Nullable<int> MCCID, 
                    global::System.Nullable<int> NurseUnitID, 
                    global::System.Nullable<int> PatientID, 
                    global::System.Nullable<int> EDLeftDateId, 
                    global::System.Nullable<int> EDLeftTimeId, 
                    global::System.Nullable<int> EDWaitDaysId, 
                    global::System.Nullable<int> EDWaitMinutesId, 
                    global::System.Nullable<bool> IsEDUnknownDischargeDate, 
                    global::System.Nullable<int> PrivateClinicProviderId, 
                    string MRCareProgramCode, 
                    string MRCareTeamCode, 
                    global::System.Nullable<int> MACID, 
                    global::System.Nullable<int> CACSID, 
                    global::System.Nullable<decimal> AmbltryCostWeight, 
                    string VendorAgeCat, 
                    global::System.Nullable<int> VendorAnestCat, 
                    global::System.Nullable<int> VendMITTotalCount) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(ETLAuditId));
            this.Adapter.InsertCommand.Parameters[1].Value = ((short)(BatchYear));
            this.Adapter.InsertCommand.Parameters[2].Value = ((short)(BatchPeriod));
            if ((AcctNum == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(AcctNum));
            }
            if ((ChartNum == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ChartNum));
            }
            if ((RIW.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(RIW.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((DPG_RIW.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(DPG_RIW.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((IsDeathInOR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(IsDeathInOR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((LOSID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(LOSID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((LOS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(LOS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((LOSHours.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(LOSHours.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((DPGID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(DPGID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((AdmissionDateID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(AdmissionDateID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((AdmissionCategoryID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(AdmissionCategoryID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((AdmissionNurseUnitID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(AdmissionNurseUnitID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((AdmissionTimeID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(AdmissionTimeID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((AdmitDrServID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(AdmitDrServID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((AnesthesiaID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(AnesthesiaID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((DischargeDateID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(DischargeDateID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((DischargeDispositionID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(DischargeDispositionID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((DischargeTimeID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(DischargeTimeID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((DoctorID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((int)(DoctorID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((EntryCodeID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((short)(EntryCodeID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((GenderID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((byte)(GenderID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((ProviderID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((int)(ProviderID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((ProviderFromID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((int)(ProviderFromID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((ProviderToID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((int)(ProviderToID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((MainPtServID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((int)(MainPtServID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((MainPtSubServID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((short)(MainPtSubServID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((MCCID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((int)(MCCID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((NurseUnitID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((int)(NurseUnitID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((PatientID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((int)(PatientID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((EDLeftDateId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((int)(EDLeftDateId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((EDLeftTimeId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((int)(EDLeftTimeId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((EDWaitDaysId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((int)(EDWaitDaysId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((EDWaitMinutesId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((int)(EDWaitMinutesId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((IsEDUnknownDischargeDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((bool)(IsEDUnknownDischargeDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((PrivateClinicProviderId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((int)(PrivateClinicProviderId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((MRCareProgramCode == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(MRCareProgramCode));
            }
            if ((MRCareTeamCode == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(MRCareTeamCode));
            }
            if ((MACID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((int)(MACID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((CACSID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((int)(CACSID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((AmbltryCostWeight.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((decimal)(AmbltryCostWeight.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((VendorAgeCat == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(VendorAgeCat));
            }
            if ((VendorAnestCat.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((int)(VendorAnestCat.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((VendMITTotalCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((int)(VendMITTotalCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private AbstractDayCareFactTableAdapter _abstractDayCareFactTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public AbstractDayCareFactTableAdapter AbstractDayCareFactTableAdapter {
            get {
                return this._abstractDayCareFactTableAdapter;
            }
            set {
                this._abstractDayCareFactTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._abstractDayCareFactTableAdapter != null) 
                            && (this._abstractDayCareFactTableAdapter.Connection != null))) {
                    return this._abstractDayCareFactTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._abstractDayCareFactTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DSDWDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._abstractDayCareFactTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.AbstractDayCareFact.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._abstractDayCareFactTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DSDWDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._abstractDayCareFactTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.AbstractDayCareFact.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._abstractDayCareFactTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DSDWDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._abstractDayCareFactTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.AbstractDayCareFact.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._abstractDayCareFactTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DSDWDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._abstractDayCareFactTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._abstractDayCareFactTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._abstractDayCareFactTableAdapter != null)) {
                    revertConnections.Add(this._abstractDayCareFactTableAdapter, this._abstractDayCareFactTableAdapter.Connection);
                    this._abstractDayCareFactTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._abstractDayCareFactTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._abstractDayCareFactTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._abstractDayCareFactTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._abstractDayCareFactTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._abstractDayCareFactTableAdapter != null)) {
                    this._abstractDayCareFactTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._abstractDayCareFactTableAdapter]));
                    this._abstractDayCareFactTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591